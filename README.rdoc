= Erbal: Very small, very fast Ragel/C based ERB parser

== Intro

Erbal is a lightweight ERB parser that uses the Ragel State Machine Compiler (http://www.complang.org/ragel/). It's written in C, it's very fast. Erbal also produces faster Ruby code than Ruby's ERB implementation to give you a evaluation-time performance benefit.

== Using Erbal

  >> require 'erbal'
  >> src = Erbal.new("<% a=1 -%>a is: <%= a -%>").parse
  => "@output_buffer = ''; a=1 ;\n@output_buffer << %Q`a is: \#{ a }`;@output_buffer"
  >> eval(src)
  => "a is: 1"

Erbal.new takes an optional 2nd argument which is a hash of options, available options are:

* :buffer - The name of the output buffer, default is '@output_buffer'
* :buffer_initial_value - The initial value of the output buffer, defaults to a blank string.

== Rails 2.3

Create the file 'config/initializers/erbal.rb' containing:

  require 'erbal/rails23'
  ActionView::Template.register_template_handler :erb, ErbalTemplateHandler

== Rails 3

I've not looked into yet.. patches are welcome! ;)

== Benchmarks

These benchmarks were run on a Mac OS X 10.6.4, 2.66 Ghx Intel Core i5 with 8 GB of 1067 MHz DDR3 RAM.

Ruby: 1.8.7 (2010-04-19 patchlevel 253) [i686-darwin10.4.0], MBARI 0x6770, Ruby Enterprise Edition 2010.02

Erubis: 2.6.6

Erbal: 1.1

  => Parsing Benchmark
  
  => Erb
  0.851 0.853 0.848 0.847 0.849 0.847
  => Average: 0.849
  
  => Erubis (using FastEruby engine)
  0.442 0.442 0.444 0.442 0.441 0.442
  => Average: 0.442
  
  => Erubis (using default Eruby engine)
  0.451 0.424 0.446 0.425 0.445 0.446
  => Average: 0.439
  
  => Erbal
  0.036 0.039 0.066 0.038 0.067 0.039
  => Average: 0.047
  
  => eval() Benchmark
  
  => Erb
  0.203 0.192 0.180 0.180 0.179 0.191
  => Average: 0.187
  
  => Erubis (using FastEruby engine)
  0.129 0.127 0.128 0.128 0.114 0.128
  => Average: 0.125
  
  => Erubis (using default Eruby engine)
  0.178 0.176 0.165 0.176 0.175 0.164
  => Average: 0.172
  
  => Erbal
  0.111 0.125 0.124 0.110 0.133 0.124
  => Average: 0.121

== Contributing

* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it, specs live in the specs/ directory.
* Commit and send me a pull request.

== Credits

Many thanks to Adrian Thurston for writing the Ragel State Machine Compiler (http://www.complang.org/ragel/)!

== Copyright

Copyright (c) 2010 Envato & Ian Leitch. See LICENSE for details.
